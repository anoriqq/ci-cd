version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
jobs:
  build:
    docker:
      - image: circleci/node:12.16.1
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock"}}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock"}}
          paths:
            - ~/.cache/yarn
      - run:
          name: Run Lint
          command: yarn run lint:ci
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
  test:
    docker:
      - image: circleci/node:12.16.1
    steps:
      - checkout
      - run:
          name: Install JUnit coverage reporter
          command: yarn add -D jest-junit
      - run:
          name: Run tests with JUnit as reporter
          environment:
            JEST_JUNIT_OUTPUT_DIR: "reports/jest/results.xml"
          command: yarn run test:ci
      - codecov/upload:
          file: ./coverage/lcov.info
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
  deploy:
    docker:
      - image: google/cloud-sdk:288.0.0
    steps:
      - checkout
      - run:
          name: Authenticate Google Cloud SDK
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run: gcloud config list
      - run:
          name: Build the Image
          command: docker build -t gcr.io/anoriqq-ci-cd/ci-cd:$CIRCLE_SHA1 .
      - run:
          name: Push the image
          command: docker push gcr.io/anoriqq-ci-cd/ci-cd:$CIRCLE_SHA1
workflows:
  version: 2.1
  build-and-test:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - master
